- name: installing user
  hosts: user
  become: yes
  tasks:
  - name: disable old nodejs and enable new one
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: Create a user 'roboshop' 
    ansible.builtin.user:
      name: roboshop

  - name: Recursively remove app directory
    ansible.builtin.file:
      path: /app
      state: absent
      
  - name: Creates app directory
    ansible.builtin.file:
      path: /app
      state: directory
  
  - name: download user application
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp

  - name: extract user application
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /app
      remote_src: yes

  - name: Install dependencies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: Copy user service
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service

  - name: deamon realod and start
    ansible.builtin.systemd_service:
      daemon_reload: true

# setup mongodb and install mongodb
  - name: copy mongodb repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongodb.repo

  - name: Install mongodb
    ansible.builtin.package:
      name: mongodb-org
      state: present

  - name: Enable and start mongodb services
    ansible.builtin.service:
      name: mongod
      state: started
      enabled: yes

  - name: Replace old hostname with new hostname
    ansible.builtin.replace:
      path: /etc/mongod.conf
      regexp: '127.0.0.1'
      replace: '0.0.0.0'

  - name: Restart mongodb
    ansible.builtin.service:
      name: mongod
      state: restarted